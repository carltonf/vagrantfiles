# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(2) do |config|
  config.vm.box = "crystal-maker"

  config.vm.hostname = "crystal"
  config.vm.box_check_update = false

  # For personal use, do not generate new pair of keys.
  config.ssh.insert_key = false

  config.vm.network "private_network", type: "dhcp"
  # config.vm.network "private_network", ip: "192.168.56.7"

  if Vagrant.has_plugin?("vagrant-hostmanager")
    ### Hostname trick
    #
    # The following block uses a popular plug-in `hostmanager` to manage
    # host/guest hosts files. However, since `hostmanager` is designed for
    # multi-machine environment, it would not update the hosts files of vagrant
    # boxes that are not in the multi-machine configuration. Here I bind-mount
    # host (in my case, windows 10) hosts file to /etc/hosts and in effect the
    # host hosts file serves as local name server that _syncs_ across all vagrant
    # boxes that uses this trick.
    #
    config.hostmanager.enabled = true
    config.hostmanager.manage_host = true
    config.hostmanager.manage_guest = false
    config.hostmanager.ignore_private_ip = false
    config.hostmanager.include_offline = true
    # The following is only needed for dynamic private network
    # default properties: https://www.virtualbox.org/manual/ch04.html#guestadd-guestprops
    # NOTE: in order for default properties be set by VBox, vboxservice needs to be enabled in guest
    #
    # NOTE: it's possible that at the time the following command is run, the
    # return ip is not the real ip or in the case of docker daemon. Particularly
    # if the VM has got a new IP. In such case, manually run `vagrant
    # hostmanager` to fix it.
    config.hostmanager.ip_resolver = proc do |vm, resolving_vm|
      if vm.id
        `VBoxManage guestproperty get #{vm.id} "/VirtualBox/GuestInfo/Net/1/V4/IP"`.split()[1]
      end
    end
    # NOTE: Funny that appending `etc` after drivers has no effect, 'etc' may be just a link
    config.vm.synced_folder  ENV["WINDIR"] + "/System32/drivers", "/tmp/windrivers"
    # NOTE: the following can mount hosts file multiple times for suspend/resume use cases
    config.vm.provision "shell", run: "always", name: "bind-hosts",
                        inline: "mount --bind /tmp/windrivers/etc/hosts /etc/hosts"
    ### Hostname trick END
  else
    $stderr.puts "WARNING: Hostname lookup requires vagrant-hostmanager plugin."
  end

  # Other than the default '.' => '/vagrant'
  WINHOME = ENV['HOMEDRIVE'] + "/" + ENV['HOMEPATH']
  config.vm.synced_folder  WINHOME + "/Dropbox", "/Dropbox"

  config.vm.provider "virtualbox" do |vb|
    # As 20160725, crystal box is using docker for most local development and
    # thus a larger memory is needed.
    vb.memory = "1024"
  end

  # Provision personal configurations, system-wide changes should be in the base
  # box creation. Do NOT RUN with SUDO
  config.vm.provision "shell", privileged: false, inline: <<-SHELL
    cd $HOME
    git clone /Dropbox/icrepos-bare/dotfiles.git
    cd dotfiles
    /bin/bash ./Init.sh

    cd $HOME
    tar xvf /Dropbox/icrepos-bare/manual.nongit/dot.gnupg.tar
    echo '** INFO: pseduoSensitive requires manual management'

    # ssh configs
    cd $HOME
    install -vm 0700 -d .ssh
    install -vm 0700 -d .ssh/controlmasters
    install -vm 0600 /vagrant/vagrant_keys/vagrant .ssh/id_rsa
    install -vm 0600 /vagrant/vagrant_keys/vagrant.pub .ssh/id_rsa.pub
    # sensitive ssh keys: encrypted though
    CW_SSH_KEYS_DIR=/Dropbox/icrepos-bare/manual.nongit/ssh/.ssh
    install -vm 0600 ${CW_SSH_KEYS_DIR}/id_rsa-crystal-w .ssh/
    install -vm 0600 ${CW_SSH_KEYS_DIR}/id_rsa-crystal-w.pub .ssh/

    # Enabled user systemd service
    # NO need to set here, as this settings can be managed in git

    # About data:
    # 1. Data should be stored in separate disks with frequent backup
    # 2. disks should be mounted at SATA port with hot-pluggable bit set.
    # 3. Preferrably, the whole data disk is formatted using partitionless btrfs
    # and mounted with lza compression enabled.
  SHELL
end
